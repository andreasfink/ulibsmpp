//
//  SmppTlv.h
//  ulibsmpp
//
//  Created by Andreas Fink on 28/03/14.
//
//

#import "ulib/ulib.h"

typedef enum SMPP_TLV_Tag
{
	SMPP_TLV_DEST_ADDR_SUBUNIT				= 0x0005,
	SMPP_TLV_DEST_NETWORK_TYPE				= 0x0006,
	SMPP_TLV_DEST_BEARER_TYPE				= 0x0007,
	SMPP_TLV_DEST_TELEMATICS_ID				= 0x0008,
	SMPP_TLV_SOURCE_ADDR_SUBUNIT			= 0x000D,
	SMPP_TLV_SOURCE_NETWORK_TYPE			= 0x000E,
	SMPP_TLV_SOURCE_BEARER_TYPE				= 0x000F,
	SMPP_TLV_SOURCE_TELEMATICS_ID			= 0x0010,
	SMPP_TLV_QOS_TIME_TO_LIVE				= 0x0017,
	SMPP_TLV_PAYLOAD_TYPE					= 0x0019,
	SMPP_TLV_ADDITIONAL_STATUS_INFO_TEXT	= 0x001D,
	SMPP_TLV_RECEIPTED_MESSAGE_ID			= 0x001E,
	SMPP_TLV_MS_MSG_WAIT_FACILITIES			= 0x0030,
	SMPP_TLV_PRIVACY_INDICATOR				= 0x0201,
	SMPP_TLV_SOURCE_SUBADDRESS				= 0x0202,
	SMPP_TLV_DEST_SUBADDRESS				= 0x0203,
	SMPP_TLV_USER_MESSAGE_REFERENCE			= 0x0204,
	SMPP_TLV_USER_RESPONSE_CODE				= 0x0205,
	SMPP_TLV_SOURCE_PORT					= 0x020A,
	SMPP_TLV_DESTINATION_PORT				= 0x020B,
	SMPP_TLV_SAR_MSG_REF_NUM				= 0x020C,
	SMPP_TLV_LANGUAGE_INDICATOR				= 0x020D,
	SMPP_TLV_SAR_TOTAL_SEGMENTS				= 0x020E,
	SMPP_TLV_SAR_SEGMENT_SEQNUM				= 0x020F,
	SMPP_TLV_SC_INTERFACE_VERSION			= 0x0210,
	SMPP_TLV_CALLBACK_NUM_PRES_IND			= 0x0302,
	SMPP_TLV_CALLBACK_NUM_ATAG				= 0x0303,
	SMPP_TLV_NUMBER_OF_MESSAGES				= 0x0304,
	SMPP_TLV_CALLBACK_NUM					= 0x0381,
	SMPP_TLV_DPF_RESULT						= 0x0420,
	SMPP_TLV_SET_DPF						= 0x0421,
	SMPP_TLV_MS_AVAILABILITY_STATUS			= 0x0422,
	SMPP_TLV_NETWORK_ERROR_CODE				= 0x0423,
	SMPP_TLV_MESSAGE_PAYLOAD				= 0x0424,
	SMPP_TLV_DELIVERY_FAILURE_REASON		= 0x0425,
	SMPP_TLV_MORE_MESSAGES_TO_SEND			= 0x0426,
	SMPP_TLV_MESSAGE_STATE					= 0x0427,
	SMPP_TLV_USSD_SERVICE_OP				= 0x0501,
	SMPP_TLV_DISPLAY_TIME					= 0x1201,
	SMPP_TLV_SMS_SIGNAL						= 0x1203,
	SMPP_TLV_MS_VALIDITY					= 0x1204,
	SMPP_TLV_ALERT_ON_MESSAGE_DELIVERY		= 0x130C,
	SMPP_TLV_ITS_REPLY_TYPE					= 0x1380,
	SMPP_TLV_ITS_SESSION_INFO				= 0x1383,
    SMPP_TLV_VENDOR_SPECIFIC_MCC                    = 0x1401,
    SMPP_TLV_VENDOR_SPECIFIC_MNC                    = 0x1402,
    SMPP_TLV_VENDOR_SPECIFIC_IMSI                   = 0x1403,
    SMPP_TLV_VENDOR_SPECIFIC_MSC_TON                = 0x1404,
    SMPP_TLV_VENDOR_SPECIFIC_MSC_NPI                = 0x1405,
    SMPP_TLV_VENDOR_SPECIFIC_MSC_ADDR               = 0x1406,
    SMPP_TLV_VENDOR_SPECIFIC_HLR_TON                = 0x1407,
    SMPP_TLV_VENDOR_SPECIFIC_HLR_NPI                = 0x1408,
    SMPP_TLV_VENDOR_SPECIFIC_HLR_ADDR               = 0x1409,
    SMPP_TLV_VENDOR_SPECIFIC_ERR2                   = 0x1410,
    SMPP_TLV_VENDOR_SPECIFIC_DELIVERY_METHOD        = 0x1411,
    SMPP_TLV_VENDOR_SPECIFIC_SMSC1                  = 0x1412,
    SMPP_TLV_VENDOR_SPECIFIC_SMSC2                  = 0x1413,
    SMPP_TLV_VENDOR_SPECIFIC_SMSC3                  = 0x1414,
    SMPP_TLV_VENDOR_SPECIFIC_USERFLAGS              = 0x1415,
    SMPP_TLV_VENDOR_SPECIFIC_OPC1                   = 0x1416,
    SMPP_TLV_VENDOR_SPECIFIC_DPC1                   = 0x1417,
    SMPP_TLV_VENDOR_SPECIFIC_OPC2                   = 0x1418,
    SMPP_TLV_VENDOR_SPECIFIC_DPC2                   = 0x1419,
    SMPP_TLV_VENDOR_SPECIFIC_TRACE_LEVEL            = 0x141a,
    SMPP_TLV_VENDOR_SPECIFIC_TRACE_FILE             = 0x141b,
    SMPP_TLV_VENDOR_SPECIFIC_TRACE_SECTION          = 0x141c,
    SMPP_TLV_VENDOR_SPECIFIC_SCTS                   = 0x141d,
    SMPP_TLV_VENDOR_SPECIFIC_SCTS_TZ                = 0x141e,
    SMPP_TLV_VENDOR_SPECIFIC_SMSC4                  = 0x141f,
    SMPP_TLV_VENDOR_SPECIFIC_HISTORY_ENABLE         = 0x1420,
    SMPP_TLV_VENDOR_SPECIFIC_HISTORY_TEXT           = 0x1421,
    SMPP_TLV_VENDOR_SPECIFIC_ROUTER_ERROR           = 0x1422,
    SMPP_TLV_VENDOR_SPECIFIC_SPECIAL_ACTION         = 0x1423,
    SMPP_TLV_VENDOR_SPECIFIC_SPECIAL_ACTION_DATA    = 0x1424,
    SMPP_TLV_VENDOR_SPECIFIC_MAX_RETRIES            = 0x1425,
    SMPP_TLV_VENDOR_SPECIFIC_RETRY_PATTERN          = 0x1426,
    SMPP_TLV_VENDOR_SPECIFIC_TT_SRISM               = 0x1427,
    SMPP_TLV_VENDOR_SPECIFIC_TT_FSM                 = 0x1428,
    SMPP_TLV_VENDOR_SPECIFIC_MSU_COUNT_SRISM_TX     = 0x1429,
    SMPP_TLV_VENDOR_SPECIFIC_MSU_COUNT_SRISM_RX     = 0x142A,
    SMPP_TLV_VENDOR_SPECIFIC_MSU_COUNT_SRISM_HTX    = 0x142B,
    SMPP_TLV_VENDOR_SPECIFIC_MSU_COUNT_SRISM_HRX    = 0x142C,
    SMPP_TLV_VENDOR_SPECIFIC_MSU_COUNT_SRISM_CRX    = 0x142D,
    SMPP_TLV_VENDOR_SPECIFIC_MSU_COUNT_FSM_TX       = 0x1430,
    SMPP_TLV_VENDOR_SPECIFIC_MSU_COUNT_FSM_RX       = 0x1431,
    SMPP_TLV_VENDOR_SPECIFIC_MSU_COUNT_TCAP_HS_TX   = 0x1432,
    SMPP_TLV_VENDOR_SPECIFIC_MSU_COUNT_TCAP_HS_RX   = 0x1433,
    SMPP_TLV_VENDOR_SPECIFIC_COMMENT                = 0x1434,


}	SMPP_TLV_Tag;

@interface SmppTlv: UMObject
{
    NSString *name;
    long tag;
    long length;
    enum tlv_type
    {
        SMPP_TLV_OCTETS = 0,
        SMPP_TLV_NULLTERMINATED = 1,
        SMPP_TLV_INTEGER = 2
    } type;
}

@property(readwrite,strong) NSString *name;
@property(readwrite,assign) long tag;
@property(readwrite,assign) long length;
@property(readwrite,assign) enum tlv_type type;

- (int) equals:(SmppTlv *)tlv;
- (SmppTlv *)initWithName:(NSString *)n tag:(int)ta length:(int)len type:(int)ty;
+ (SmppTlv *)tlvWithName:(NSString *)n tag:(int)ta length:(int)len type:(int)ty;


@end
